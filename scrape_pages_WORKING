from requests_html import AsyncHTMLSession
from bs4 import BeautifulSoup
import asyncio
import nest_asyncio

nest_asyncio.apply()  # Patch the event loop for IPython or Jupyter

async def getdata(url):
    s = AsyncHTMLSession()
    r = await s.get(url)
    await asyncio.sleep(2)  # Wait for 2 seconds before rendering
    await r.html.arender(sleep=1, timeout=30)  # Increase the timeout value
    soup = BeautifulSoup(r.html.html, 'html.parser')
    return soup

async def getnextpage(soup):
    # Find the next page link
    next_page_link = soup.find('a', {'class': 's-pagination-next'})

    if next_page_link:
        url = 'https://www.amazon.co.uk' + next_page_link['href']
        return url

    return None

async def main():
    url = 'https://www.amazon.co.uk/s?k=dslr+camera&i=black-friday&ref=nb_sb_noss'

    while True:
        data = await getdata(url)
        url = await getnextpage(data)
        if not url:
            break
        print(url)

def run_async_code():
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())

# Call the function to run the asynchronous code
run_async_code()
