# -*- coding: utf-8 -*-
"""Rate_Optimizer_app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E9_KmrWkgbivxAF1zP_AxBzf1uldGVjh

**K řešení:**



*   Máme zobrazeno pouze 25 hotelů, proto i v dataframu máme pouze 25 řádků, ale ve vyhledávání bylo přes 100.
*   ukládání dat do souboru csv
*   web scrapping zabalit do funkce a automatizovat její spouštění v cyklech
*   vytvořit ML model na predikování cen
"""

from bs4 import BeautifulSoup
import requests
import pandas as pd
import csv
from datetime import datetime, date, timedelta

hotels_data = []

def booking_scraping(date_check_in, date_check_out):
  check_in = date_check_in
  check_out = date_check_out
  url = f'https://www.booking.com/searchresults.cs.html?label=gen173nr-1BCAEoggI46AdIM1gEaDqIAQGYAQm4AQfIAQ3YAQHoAQGIAgGoAgO4Asnc7KMGwAIB0gIkYmY1MjcxYzAtNjc0Yy00NzBjLWFlMWItM2UyYjgyNzIxZDhl2AIF4AIB&sid=5bfb4e265dc1fc1ce6919376c5a5321b&aid=304142&ss=Karlovy+Vary%2C+Karlovy+Vary+Region%2C+Czech+Republic&efdco=1&lang=cs&src=index&dest_id=-547025&dest_type=city&ac_position=0&ac_click_type=b&ac_langcode=en&ac_suggestion_list_length=5&search_selected=true&search_pageview_id=213055e4cdf00011&ac_meta=GhAyMTMwNTVlNGNkZjAwMDExIAAoATICZW46CGthcmxvdnkgQABKAFAA&checkin={check_in}&checkout={check_out}&group_adults=2&no_rooms=1&group_children=0&sb_travel_purpose=leisure&nflt=class%3D4&selected_currency=CZK&soz=1&lang_changed=1'
  headers = {
      'User-Agent': 'Mozilla/5.0 (X11; CrOS x86_64 8172.45.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.64 Safari/537.36',
      'Accept-Language': 'en-US, en;q=0.5'
  }

  response  = requests.get(url, headers=headers)

  soup = BeautifulSoup(response.text, 'html.parser')

  # Find all the hotel elements in the HTML document
  hotels = soup.findAll('div', {'data-testid': 'property-card'})

  #hotels_data = []
  # Loop over the hotel elements and extract the desired data
  for hotel in hotels:
      # Extract the hotel name
      name_element = hotel.find('div', {'data-testid': 'title'})
      name = name_element.text.strip()
      #print(name)

      # Extract the hotel location
      location_element = hotel.find('span', {'data-testid': 'address'})
      location = location_element.text.strip()

      # Extract the hotel price
      price_element = hotel.find('span', {'data-testid': 'price-and-discounted-price'})
      price = price_element.text.strip()
      
      # Extract the hotel rating
      rating_element = hotel.find('div', {'class': 'b5cd09854e d10a6220b4'})
      if rating_element is not None:
        rating = rating_element.text.strip()
      else:
        rating = None

      # Extract the hotel distance
      distance_element = hotel.find('span', {'data-testid': 'distance'})
      distance = distance_element.text.strip()

      # Extract the hotel free rooms
      rooms_element = hotel.find('div', {'class': 'cb1f9edcd4'})
      #print(rooms_element)

      rooms = None
      if rooms_element:
        rooms = rooms_element.text.strip()
      
      # Append hotes_data with info about hotel
      hotels_data.append({
          'check_in': check_in,
          'name': name,
          'location': location,
          'price': price,
          'rating': rating,
          'distance': distance,
          'rooms': rooms
      })

date_check_in = datetime.strptime('2023-07-01', '%Y-%m-%d')
date_check_out = datetime.strptime('2023-07-02', '%Y-%m-%d')

booking_scraping(date_check_in, date_check_out)

hotels = pd.DataFrame(hotels_data) #vytvoření dataframu

indexes_to_drop = hotels[hotels['distance'].str.contains('Karlovy Vary:')].index #zahození řádků, kde byl jiný formát zápisu (byly to hotely ve velké vzdálenosti)
hotels.drop(indexes_to_drop, inplace=True)

# získání vzdálenosti v metrech od zadané lokace
hotels['distance_num'] = hotels['distance'].apply(
    lambda x: x.split(' ')[0]).apply( #slicing hodnoty ze stringu
    lambda x: x.replace(',','.')).astype(float) #nahrazení čárky v hodnotě za tečku

hotels['distance_unit'] = hotels['distance'].apply(
    lambda x: x.split(' ')[1]) #vytvoření sloupce s jednotkami vzdálenosti

hotels['distance_m'] = hotels.apply( #vytvoření nového sloupce a převedení na metry, kde hodnota byla v kilometrech
    lambda x: x['distance_num']*1000
    if x['distance_unit'] == 'km'
    else x['distance_num'],
    axis=1)

distance_to_drop = hotels[hotels['distance_m'] > 4000].index
hotels.drop(distance_to_drop, inplace=True)

# získání číselné proměnné z ceny ubytování
hotels['price_czk'] = hotels['price'].apply(
    lambda x: x[:-3]).apply(  #odstranění Kč včetně mezery
    lambda x: x.replace(' ','')).astype(int)  #odstranění mezery mezi čísly

price_czk_to_drop = hotels[hotels['price_czk'] > 200000].index
hotels.drop(price_czk_to_drop, inplace=True)

# převedení hodnocení na float
hotels['rating'] = hotels['rating'].apply(
    lambda x: str(x).replace(',','.')).astype(float)

hotels['rating'] = hotels['rating'].fillna(hotels['rating'].mean()) #nahrazení nulových hodnot

# extrahování číslice ze stringu zbývajících pokojů, hodnota None nahrazena 0
hotels['rooms_num'] = hotels['rooms'].str.extract('(\d+)').fillna(10).astype(int)

# rozdělení data na sloupce rok, měsíc, den
hotels['check_in'] = pd.to_datetime(hotels['check_in'])
hotels['Day'] = hotels['check_in'].dt.day
hotels['Month'] = hotels['check_in'].dt.month
hotels['Year'] = hotels['check_in'].dt.year

# rozdělení sloupce Day do 7 jednotlivých kategorií

hotels['weekday'] = hotels['check_in'].dt.day_name()

#odstranění sloupců, které nepotřebujeme
columns_to_drop = ['distance_unit', 'distance_num', 'distance', 'price', 'rooms']
hotels.drop(columns_to_drop, axis=1, inplace=True)

hotels.head()

hotels.describe()

price_min = min(hotels['price_czk'])
price_max = max(hotels['price_czk'])
price_mean = hotels['price_czk'].mean()
price_median = hotels['price_czk'].median()

print(f'Minimální cena je: {price_min} Kć')
print(f'Maximální cena je: {price_max} Kć')
print(f'50 % hotelů má cenu pod: {price_median} Kć')
print(f'Průměrná cena je: {price_mean}')

#hotels.to_csv('booking_23-07-01_24-06-29.csv', index=False)